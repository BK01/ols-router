apiVersion: v1
kind: Template
labels:
    template: admin-app-file-based
message: |-
    The following service(s) have been created in your project:

      ${ADMIN_APP}
      ${MINIO_SERVICE_NAME}
      ${CADDY_SERVICE_NAME}

    For more information abotu using this template, including OpenShift considerations, please contact teh rocketchat community.
    This Template will add the following objects:

      Minio objects:
      * Deployment config
      * secrets - used for client authentication
      * Service
      * Route

      Caddy objects:
      * Deployment config
      * configMap - used as the config for caddy.
      * Route
      * Service

      A shared PersistentVolumeClaim:
      * shared between the Minio and Caddy pods

metadata:
  annotations:
    description: |-
      Router-data Template for use in OpenShift.

      WARNING: Any configuration stored will be lost upon pod destruction. ConfigMaps should be used for codified configuration.
    iconClass: icon-other-unknown
    openshift.io/display-name: Admin-app-filebased
    openshift.io/documentation-url: https://github.com/bcgov/ols-router
    openshift.io/long-description: This template provides sample a file based Admin app with caddy/minio with a shared PCV.
    openshift.io/provider-display-name: DataBC-OLS
    openshift.io/support-url: https://github.com/bcgov/ols-router
    tags: geocoder,router,caddy,minio
  name: admin-app-file-based
parameters:
  - name: TOOLS_NAMESPACE
    description: The tools namspace where image streams will be pulled from.
    required: true

  - description: A common label that will be applied to all objects
    displayName: App Label
    name: APPLICATION_NAME
    required: true
    value: router-data
  - name: ROUTER_REPLICA_COUNT
    description: "The number of Router Web replicas to deploy"
    displayName: Router Replica Count
    required: true
    value: "4"

  - description: The name of the Deployment Environment e.g. test, prod, dlv - used for the caddy hostname.
    displayName: Deployment Environment
    name: DEPLOYMENT_ENV
    required: true
    value: -dlv
  - description: The name of the Admin App Service.
    displayName: Admin App Service Name
    name: ADMIN_APP_SERVICE_NAME
    required: true
    value: data-admin
  - name: ENV
    description: The environment i.e. on of -dev, -test, -prod.  This will be appended to hostnames so routes don't collide across namespaces.
    displayName: App Environment
    required: true

  - name: DATA_ADMIN_HOSTNAME
    description: The hostname for the Admin App.
    displayName: Admin configurtion app hostname
    required: true
    value: data-admin


  - name: DEFAULT_DOCKERCFG
    description: default-dockercfg secret for the 'default' Service account
    displayName: Default service account docker Secret
    required: true
    # e.g.
    # value: default-dockercfg-jgsbn
  - name: DOCKER_SECRET
    description: docker-secret for the 'default' Service account for Artifactory
    displayName: Default service account Artifactory docker Secret
    required: true
    value:  docker-secret


  - description: The name of the Caddy service.
    displayName: Caddy Service Name
    name: CADDY_SERVICE_NAME
    required: true
    value: caddy
  - description: The Minio minioAccessKey.
    displayName: Minio Access Key - base64 encoded
    name: MINIO_ACCESS_KEY
    required: true
    #value: cm91dGVyZGF0YQ==
  - description: The Minio minioSecretKey.
    displayName: Minio Secret Key
    name: MINIO_SECRET_KEY
    required: true
    #value: cm91dGVyZGF0YUBnb3YuYmMuY2E=
  - description: The name of the minio service.
    displayName: Minio Service Name
    name: MINIO_SERVICE_NAME
    required: true
    value: minio
  - description: Default route subdomain - use pathfinder.gov.bc.ca
    displayName: Route subdomain
    name: ROUTE_SUBDOMAIN
    required: true
    value:  192.168.64.4.nip.io
  - description: Internal route subdomain
    displayName: Route subdomain
    name: INTERNAL_ROUTE_SUBDOMAIN
    required: true
    value:  pathfinder.bcgov

  - name: "DATA_ADMIN_IS_TAG"
    description: "The image stream tag to use for the ols-admin-sidecar"
    required: true

  - name: "ROUTER_IS_TAG"
    description: "The image stream tag to use for the ols-router-sidecar"
    required: true

  - name: DATASTORE_URL
    description: "the URL for the datastore"
    required: true
    value: https://router-datastore-prod.apps.silver.devops.gov.bc.ca/router/

objects:
#
# Config map for bgeo-configuration-parameters.csv
#
- kind: ConfigMap
  apiVersion: v1
  metadata:
    creationTimestamp: null
    name: input-bgeo-configuration-parameters
  data:
    bgeo_configuration_parameters.csv: |-
      app_id,config_param_name,config_param_value
      ROUTER,baseSrsCode,3005
      ROUTER,copyrightLicenseURI,https://www2.gov.bc.ca/gov/content?id=A519A56BC2BF44E4A008B33FCF527F61
      ROUTER,copyrightNotice,Copyright 2020 Province of British Columbia - Open Government License
      ROUTER,dataSource.baseFileUrl,${DATASTORE_URL}
      ROUTER,dataSource.baseFileUrl.devel,http://ols-router-data:8080
      ROUTER,dataSource.className,ca.bc.gov.ols.router.datasource.FileRouterDataSource
      ROUTER,defaultDisableOptions,"TD,EV,SC,TF"
      ROUTER,defaultEnableOptions,"GDF,LDF,TR,XC,TC"
      ROUTER,defaultGlobalDistortionField,"alleyway:1.2,alleyway.truck:1.1,arterial_major:1.01,arterial_major.truck:1.01,arterial_minor:1.01,arterial_minor.truck:1.01,collector_major:1.01,collector_major.truck:1.01,collector_minor:1.01,collector_minor.truck:1.01,driveway:1.2,driveway.truck:1.1,ferry:1,ferry.truck:1,freeway:1,freeway.truck:1,highway_major:1,highway_major.truck:1,highway_minor:1,highway_minor.truck:1,lane:1.01,lane.truck:1.01,local:1.1,local.truck:1.05,ramp:1,ramp.truck:1,recreation:1.2,recreation.truck:1.1,resource:1.2,resource.truck:1.1,restricted:1.2,restricted.truck:1.1,service:1.2,service.truck:1.1,strata:1.2,strata.truck:1.1,yield_lane:1.01,yield_lane.truck:1.01"
      ROUTER,defaultTruckRouteMultiplier,9
      ROUTER,defaultTurnCost,"3,1,10,5"
      ROUTER,defaultXingCost,"3,10,7,1.2"
      ROUTER,disclaimer,https://www2.gov.bc.ca/gov/content?id=79F93E018712422FBC8E674A67A70535
      ROUTER,glossaryBaseUrl,https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md
      ROUTER,kmlStylesUrl,http://openmaps.gov.bc.ca/kml/router_results_styles.kml
      ROUTER,maxOptimalRoutePoints,100
      ROUTER,maxPairs,1000
      ROUTER,maxRoutePoints,100
      ROUTER,moreInfoUrl,https://www2.gov.bc.ca/gov/content?id=9D99E684CCD042CD88FADC51E079B4B5
      ROUTER,privacyStatement,https://www2.gov.bc.ca/gov/content?id=9E890E16955E4FF4BF3B0E07B4722932

#
# Caddy DeploymentConfig
#
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${CADDY_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${CADDY_SERVICE_NAME}
          #app: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
      spec:
        containers:
        - name: www
          image: image-registry.apps.silver.devops.gov.bc.ca/1475a9-tools/caddy:2.4.1-alpine
          imagePullPolicy: IfNotPresent
          command:
          - caddy
          args:
          - run
          - --config
          - /conf/Caddyfile
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: caddy-conf
          - mountPath: /data
            name: config-data-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: config-data-volume
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-pvc
        - name: caddy-conf
          configMap:
            defaultMode: 420
            items:
            - key: caddifile
              path: Caddyfile
            name: caddy-conf-${APPLICATION_NAME}
    test: false
    triggers:
    - type: ConfigChange

#
# Minio DeploymentConfig
#
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${MINIO_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          #app: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
          app: ${APPLICATION_NAME}
          deploymentconfig: ${MINIO_SERVICE_NAME}
      spec:
        containers:
        - name: minio
          image: image-registry.apps.silver.devops.gov.bc.ca/1475a9-tools/minio:RELEASE.20201-05-27T22-06-31Z
          #image: docker-registry.default.svc:5000/openshift/minio
          imagePullPolicy: Always
          env:
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: minioAccessKey
                name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: minioSecretKey
                name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
          - name: MINIO_CONFIG_DIR
            value: /tmp
          - name: MINIO_DATA_DIR
            value: /data
          args:
          - server
          - /data
          ports:
          - containerPort: 9000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: config-data-volume

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: config-data-volume
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-pvc
    test: false
    triggers:
    - type: ConfigChange

#
# data-admin Deployment
#
- kind: Deployment
  apiVersion: apps/v1
  metadata:
    # generation: 1
    labels:
      app: ${APPLICATION_NAME}
    name: ${ADMIN_APP_SERVICE_NAME}-${APPLICATION_NAME}
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ${APPLICATION_NAME}-web
        #app: ols-router-admin
        #name: ols-router-admin
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}-web
          #app: ols-router-admin
          #name: ols-router-admin
      spec:
        imagePullSecrets:
          - name: ${DOCKER_SECRET}
          - name: ${DEFAULT_DOCKERCFG}
          # e.g.
          #- name: default-dockercfg-hb696
        containers:
        - name: tomcat
          image: docker-remote.artifacts.developer.gov.bc.ca/tomcat:9-jre11-slim
          imagePullPolicy: IfNotPresent
          command:
          - catalina.sh
          - run
          env:
          - name: CATALINA_BASE
            value: /usr/local/tomcat
          - name: OLS_ROUTER_CONFIGURATION_STORE
            value: ca.bc.gov.ols.config.FileConfigurationStore
          - name: OLS_FILE_CONFIGURATION_URL
            value: file://apps/conf/router
          ports:
          - containerPort: 8080
            name: catalina-http
            protocol: TCP
          resources:
            limits:
              cpu: "500m"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /apps/conf
            name: config-data-volume
          - mountPath: /usr/local/tomcat/logs
            name: tc-work
          - mountPath: /usr/local/tomcat/work
            name: tc-work
          - mountPath: /usr/local/tomcat/temp
            name: tc-work
          - mountPath: /usr/local/tomcat/conf/Catalina
            name: tc-conf
          - mountPath: /usr/local/tomcat/webapps
            name: app-volume
        dnsPolicy: ClusterFirst

        initContainers:

        - name: init-copy-war
          command:
          - cp
          - /ols-router-admin.war
          - /app/int.war
          image: image-registry.openshift-image-registry.svc:5000/${TOOLS_NAMESPACE}/ols-router-admin-sidecar:${DATA_ADMIN_IS_TAG}
          imagePullPolicy: Always
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app
            name: app-volume

        - name: init-copy-config
          image: docker-remote.artifacts.developer.gov.bc.ca/busybox:1.33.1
          command:
          - sh
          - "-c"
          - |
            /bin/sh <<EOF

            mkdir /apps/conf/router
            cp \
              /apps/config/bgeo_configuration_parameters.csv \
              /apps/conf/router
            EOF
          volumeMounts:
          - mountPath: /apps/config
            name: bgeo-configuration-parameters
          - mountPath: /apps/conf
            name: config-data-volume

        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tc-work
        - emptyDir: {}
          name: tc-conf
        - emptyDir: {}
          name: app-volume
        - name: bgeo-configuration-parameters
          configMap:
            name: input-bgeo-configuration-parameters
        - name: config-data-volume
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-pvc

  status: {}

# ols-router-web StatefulSet
- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    labels:
      app: ols-router-web
      statefulset: ols-router-web
    name: ols-router-web
  spec:
    podManagementPolicy: OrderedReady
    replicas: ${{ROUTER_REPLICA_COUNT}}
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        statefulset: ols-router-web
    serviceName: ols-router-web
    template:
      metadata:
        labels:
          app: ols-router-web
          statefulset: ols-router-web
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: statefulset
                  operator: In
                  values:
                  - ols-router-web
              topologyKey: kubernetes.io/hostname
        imagePullSecrets:
        - name: ${DOCKER_SECRET}
        - name: ${DEFAULT_DOCKERCFG}

        initContainers:
        - name: init-copy-war
          # Copy the ols-router.war to the PVC
          command:
          - cp
          - /ols-router.war
          - /app/ROOT.war
          image: image-registry.openshift-image-registry.svc:5000/${TOOLS_NAMESPACE}/ols-router-sidecar:${ROUTER_IS_TAG}
          imagePullPolicy: Always
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app
            name: app-volume

        - name: init-wait-for-caddy-service
          image: docker-remote.artifacts.developer.gov.bc.ca/busybox:1.33.1
          # Wait for the Admin App and Caddy Service to start
          # In other words, wait for Caddy to be up
          command:
            - 'sh'
            - '-c'
            - |
              /bin/sh <<EOF

              while (:);
              do
                  nc -w 1 ${CADDY_SERVICE_NAME}-${APPLICATION_NAME} 8080
                  if [ $? == 0 ];
                    then break;
                  fi;
                  printf .;
                  sleep 1;
              done;
              EOF

        - name: init-wait-for-config
          image: docker-remote.artifacts.developer.gov.bc.ca/busybox:1.33.1
          # Wait for the Admin App and Caddy Service to start and server the config
          # In other words, wait for Caddy to start and server the config
          command:
            - 'sh'
            - '-c'
            - |
              /bin/sh <<EOF
              #set -xv

              while (:); do

                if wget -qS "http://${CADDY_SERVICE_NAME}-${APPLICATION_NAME}:8080/router/bgeo_configuration_parameters.csv" 2>&1 | grep HTTP/1.1 | grep -q "200"; then
                  echo "config settings found";
                  exit 0;
                fi

                sleep 1
              done
              EOF

        containers:

        - command:
          - catalina.sh
          - run
          env:
          - name: CATALINA_BASE
            value: /usr/local/tomcat
          - name: JAVA_OPTS
            value: -XX:OnOutOfMemoryError="kill -15 %p" -XX:MaxRAMPercentage=75.0
          - name: OLS_ROUTER_CONFIGURATION_STORE
            value: ca.bc.gov.ols.config.FileConfigurationStore
          - name: OLS_FILE_CONFIGURATION_URL
            value: http://${CADDY_SERVICE_NAME}-${APPLICATION_NAME}:8080/router

          image: docker-remote.artifacts.developer.gov.bc.ca/tomcat:9-jre11-slim
          imagePullPolicy: IfNotPresent
          name: tomcat
          ports:
          - containerPort: 8080
            name: catalina-http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "500m"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/tomcat/logs
            name: router-logs
          - mountPath: /usr/local/tomcat/work
            name: tc-work
          - mountPath: /usr/local/tomcat/temp
            name: tc-work
          - mountPath: /usr/local/tomcat/conf/Catalina
            name: tc-conf
          - mountPath: /usr/local/tomcat/webapps
            name: app-volume
          # - name: state-ledger-vol
          #   mountPath: /state-ledger


        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tc-work
        - emptyDir: {}
          name: tc-conf
        - emptyDir: {}
          name: app-volume
        - name: bgeo-configuration-parameters
          configMap:
            name: bgeo-configuration-parameters
        # - name: state-ledger-vol
        #   persistentVolumeClaim:
        #     claimName: state-ledger

    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - metadata:
        name: router-logs
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi



# Caddy Service
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
    #name: ${APPLICATION_NAME}
  spec:
    ports:
    #- name: 8080-tcp
    - name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP

# MinIO Service
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
    #name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      deploymentconfig: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}

    sessionAffinity: None
    type: ClusterIP

# Service for the Data Admin App
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${ADMIN_APP_SERVICE_NAME}-${APPLICATION_NAME}
  spec:
    ports:
    - name: data-admin
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}-web
      #deploymentconfig: ${ADMIN_APP_SERVICE_NAME}-${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

# Caddy Route
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
    #name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
    # TODO
    # Questions:
    #    1. why is the route not listed in the overview page?  trivial but it bugs me. it WAS showing up before!
    #    2. Should routes be internal only? e.g. route-to-this-app.pathfinder.bcgov
    #
  spec:
    # host: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}.${ROUTE_SUBDOMAIN}
    host: ${APPLICATION_NAME}${DEPLOYMENT_ENV}.${ROUTE_SUBDOMAIN}
    port:
      targetPort: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
    tls:
      termination: edge
    to:
      kind: Service
      name: ${CADDY_SERVICE_NAME}-${APPLICATION_NAME}
      #name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None

# Minio Route
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
    #name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
    # TODO
    # Questions:
    #    1. why is the route not listed in the overview page?  trivial but it bugs me. it WAS showing up before!
    #    2. Should routes be internal only? e.g. route-to-this-app.pathfinder.bcgov
    #
  spec:
    host: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}${DEPLOYMENT_ENV}.${ROUTE_SUBDOMAIN}
    port:
      targetPort: 9000-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
      #name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None

# Route for the Data Admin App
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    creationTimestamp: null
    name: data-admin
  spec:
    host: ${DATA_ADMIN_HOSTNAME}-${ENV}.${ROUTE_SUBDOMAIN}
    path: /int/
    port:
      targetPort: data-admin
    tls:
      termination: edge
    to:
      kind: Service
      name: ${ADMIN_APP_SERVICE_NAME}-${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
  status:
    ingress: null


# PersistentVolumeClaim shared
# TODO
# What to name This
# What size works?
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    annotations:
      volume.beta.kubernetes.io/storage-class: netapp-file-standard
      #volume.beta.kubernetes.io/storage-class: gluster-file
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-pvc
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 20Mi
        #storage: 5Gi

# Caddy Config ConfigMap
- kind: ConfigMap
  apiVersion: v1
  data:
    caddifile: |-
      :8080
      root * /data
      file_server
    #  :8080
    #  root * /data
    #  file_server
    # 0.0.0.0:8080
    # root /data
    # log stdout
    # errors stdout
    # ext .png .kml .html .htm
    #caddifile: |-
    #  0.0.0.0:2015
    #    git https://8262169f6c9921fb0cc4eca5d21fd61f98691bb1@gogs.data.gov.bc.ca/dbcols/ols-router-data.git /data/router {
    #    branch qa
    #    }
    #  root /data/router
    #  log stdout
    #  errors stdout
    #  ext .png .kml .html .htm
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: caddy-conf-${APPLICATION_NAME}

# Minio Secret
- kind: Secret
  apiVersion: v1
  data:
    minioAccessKey: ${MINIO_ACCESS_KEY}
    minioSecretKey: ${MINIO_SECRET_KEY}
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${MINIO_SERVICE_NAME}-${APPLICATION_NAME}
  type: Opaque
