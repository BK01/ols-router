apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: cassandra-test-template
metadata:
  name: cassandra-test-template
  annotations:
    openshift.io/display-name: "DataBC Route Planner API"
    description: >-
      An example Route Planner API application with a Cassandra cluster,
      a Data Admin WebApp and a Router Planer API. For more information
      about using this template, including OpenShift considerations, see
      https://docs.openshift.com/container-platform/4.6/openshift_images/using-templates.html.
      Note: Logs for router nodes are persisted in PCVs.

    openshift.io/long-description: >-
      This template defines resources needed to develop a Route Planner API
      application, including a build configuration, application DeploymentConfig, and
      configuration database DeploymentConfig.  The database is stored in
      persistent storage.

    tags: "router,java,gis,location"
    iconClass: icon-spring
    openshift.io/provider-display-name: "Data Systems and Services, DataBC"
    openshift.io/documentation-url: "https://github.com/bcgov/ols-router"
    openshift.io/support-url: "https://access.redhat.com"

message: |-
  Your admin credentials are ${ADMIN_USERNAME}:${ADMIN_PASSWORD}
  The following objects have been created in you project:

  StatefulSet
    cassandra-${APP_NAME} - Cassandra cluster
    ols-router-web        - Route Planne API cluster

  Service
    cassandra-${APP_NAME} - Cassandra
    ols-router-web        - Route Planner API WebApp
    ols-router-admin      - Config Admin WebApp

  Route
    ols-router-admin      - Router - Config Admin WebApp

  DeploymentConfig
    N/A

  Deployment
    ols-router-admin      - Config Admin WebApp - Deployment

  NetworkPolicy
    allow-from-openshift-ingress
    allow-same-namespace
    deny-by-default
    allow-traffic-from-gateway-to-${APP_NAME}-${ENV}

parameters:
  - name: TOOLS_NAMESPACE
    description: The tools namspace where image streams will be pulled from.
    required: true
  - description: A common label that will be applied to all objects
    displayName: App Label
    name: APP_NAME
    required: true
    value: router
  - description: The environment i.e. on of -dev, -test, -prod.  This will be appended to hostnames so routes don't collide across namespaces.
    displayName: App Environment
    name: ENV
    required: true

  - description: The hostname for the Admin App.
    displayName: Admin configurtion app hostname
    name: ROUTER_ADMIN_HOSTNAME
    required: true
    value: router-admin
  - description: The hostname for the Router API App.
    displayName: Router API endpoint hostname.
    name: ROUTER_API_HOSTNAME
    required: true
    value: router-api
  - description: Default route subdomain - use apps.silver.devops.gov.bc.ca
    displayName: Route subdomain
    name: ROUTE_SUBDOMAIN
    required: true
    value:  apps.silver.devops.gov.bc.ca

  - description: default-dockercfg secret for the 'default' Service account
    displayName: Default service account docker Secret
    name: DEFAULT_DOCKERCFG
    required: true
    # e.g.
    # value: default-dockercfg-jgsbn
  - description: docker-secret for the 'default' Service account for Artifactory
    displayName: Default service account Artifactory docker Secret
    name: DOCKER_SECRET
    required: true
    value:  docker-secret

  - name: "ROUTER_IS_TAG"
    description: "The image stream tag to use for the ols-router-sidecar"
    required: true
  - name: "DATA_ADMIN_IS_TAG"
    description: "The image stream tag to use for the ols-admin-sidecar"
    required: true

  - name: DATASTORE_URL
    description: "the URL for the datastore"
    required: true
    value: https://router-datastore-prod.apps.silver.devops.gov.bc.ca/router/

objects:

- kind: ConfigMap
  apiVersion: v1
  metadata:
    creationTimestamp: null
    name: bgeo-configuration-parameters
  data:
    bgeo_configuration_parameters.csv: |-
      app_id^config_param_name^config_param_value
      ROUTER^baseSrsCode^3005
      ROUTER^copyrightLicenseURI^https://www2.gov.bc.ca/gov/content?id=A519A56BC2BF44E4A008B33FCF527F61
      ROUTER^copyrightNotice^Copyright 2020 Province of British Columbia - Open Government License
      ROUTER^dataSource.baseFileUrl^${DATASTORE_URL}
      ROUTER^dataSource.baseFileUrl.devel^http://ols-router-data:8080
      ROUTER^dataSource.className^ca.bc.gov.ols.router.datasource.FileRouterDataSource
      ROUTER^defaultDisableOptions^TD,EV,SC,TF
      ROUTER^defaultEnableOptions^GDF,LDF,TR,XC,TC
      ROUTER^defaultGlobalDistortionField^alleyway:1.2,alleyway.truck:1.1,arterial_major:1.01,arterial_major.truck:1.01,arterial_minor:1.01,arterial_minor.truck:1.01,collector_major:1.01,collector_major.truck:1.01,collector_minor:1.01,collector_minor.truck:1.01,driveway:1.2,driveway.truck:1.1,ferry:1,ferry.truck:1,freeway:1,freeway.truck:1,highway_major:1,highway_major.truck:1,highway_minor:1,highway_minor.truck:1,lane:1.01,lane.truck:1.01,local:1.1,local.truck:1.05,ramp:1,ramp.truck:1,recreation:1.2,recreation.truck:1.1,resource:1.2,resource.truck:1.1,restricted:1.2,restricted.truck:1.1,service:1.2,service.truck:1.1,strata:1.2,strata.truck:1.1,yield_lane:1.01,yield_lane.truck:1.01
      ROUTER^defaultTruckRouteMultiplier^9
      ROUTER^defaultTurnCost^3,1,10,5
      ROUTER^defaultXingCost^3,10,7,1.2
      ROUTER^disclaimer^https://www2.gov.bc.ca/gov/content?id=79F93E018712422FBC8E674A67A70535
      ROUTER^glossaryBaseUrl^https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md
      ROUTER^kmlStylesUrl^http://openmaps.gov.bc.ca/kml/router_results_styles.kml
      ROUTER^maxOptimalRoutePoints^100
      ROUTER^maxPairs^1000
      ROUTER^maxRoutePoints^100
      ROUTER^moreInfoUrl^https://www2.gov.bc.ca/gov/content?id=9D99E684CCD042CD88FADC51E079B4B5
      ROUTER^privacyStatement^https://www2.gov.bc.ca/gov/content?id=9E890E16955E4FF4BF3B0E07B4722932

    bgeo_keyspace_config.cql: |-
      CREATE KEYSPACE bgeo WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '2'}  AND durable_writes = true;

      CREATE TABLE bgeo.bgeo_configuration_parameters (
          app_id text,
          config_param_name text,
          config_param_value text,
          PRIMARY KEY (app_id, config_param_name)
      ) WITH CLUSTERING ORDER BY (config_param_name ASC)
          AND bloom_filter_fp_chance = 0.01
          AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
          AND comment = ''
          AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
          AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
          AND crc_check_chance = 1.0
          AND dclocal_read_repair_chance = 0.1
          AND default_time_to_live = 0
          AND gc_grace_seconds = 864000
          AND max_index_interval = 2048
          AND memtable_flush_period_in_ms = 0
          AND min_index_interval = 128
          AND read_repair_chance = 0.0
          AND speculative_retry = '99PERCENTILE';

- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    labels:
      app: cassandra-${APP_NAME}
      statefulset: cassandra-${APP_NAME}
    name: cassandra-${APP_NAME}
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        statefulset: cassandra-${APP_NAME}
    serviceName: cassandra-${APP_NAME}
    template:
      metadata:
        labels:
          app: cassandra-${APP_NAME}
          statefulset: cassandra-${APP_NAME}
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: statefulset
                  operator: In
                  values:
                  - cassandra-${APP_NAME}
              topologyKey: kubernetes.io/hostname
        containers:
        - command:
          - /docker-entrypoint.sh
          - -R
          env:
          - name: MAX_HEAP_SIZE
            #value: 1500M
            value: 2500M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_LISTEN_ADDRESS
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: CASSANDRA_SEEDS
            value: cassandra-${APP_NAME}-0.cassandra-${APP_NAME}
          - name: CASSANDRA_CLUSTER_NAME
            value: k8s
          - name: CASSANDRA_DC
            value: DC1
          - name: CASSANDRA_RACK
            value: Rack1
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: GossipingPropertyFileSnitch
          image: docker-remote.artifacts.developer.gov.bc.ca/cassandra:3.11.2
          #image: tools/cassandra:3.11.2
          #image: image-registry.openshift-image-registry.svc:5000/tools/cassandra:3.11.2
          #image: image-registry.openshift-image-registry.svc:5000/tools/cassandra:3.11
          #image: image-registry.openshift-image-registry.svc:5000/dev/cassandra:3.11
          #image: registry.hub.docker.com/library/cassandra:3.11
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - nodetool drain
          name: cassandra-${APP_NAME}
          ports:
          - containerPort: 7000
            name: intra-node
            protocol: TCP
          - containerPort: 7001
            name: tls-intra-node
            protocol: TCP
          - containerPort: 7199
            name: jmx
            protocol: TCP
          - containerPort: 9042
            name: cql
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              #memory: 2Gi
              memory: 4Gi
            requests:
              cpu: 250m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/cassandra
            name: cassandra-data
          - mountPath: /var/log/cassandra
            name: cassandra-logs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        imagePullSecrets:
        - name: ${DOCKER_SECRET}
        volumes:
        - emptyDir: {}
          name: cassandra-logs
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - metadata:
        name: cassandra-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        #storageClassName: netapp-block-standard

- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: cassandra-${APP_NAME}
    name: cassandra-${APP_NAME}
  spec:
    clusterIP: None
    ports:
      - port: 9042
        protocol: TCP
        targetPort: 9042
    selector:
      app: cassandra-${APP_NAME}
    sessionAffinity: None
    type: ClusterIP

- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    labels:
      app: ols-router-web
      statefulset: ols-router-web
    name: ols-router-web
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        statefulset: ols-router-web
    serviceName: ols-router-web
    template:
      metadata:
        labels:
          app: ols-router-web
          statefulset: ols-router-web
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: statefulset
                  operator: In
                  values:
                  - ols-router-web
              topologyKey: kubernetes.io/hostname
        imagePullSecrets:
        - name: ${DOCKER_SECRET}
        - name: ${DEFAULT_DOCKERCFG}

        initContainers:
        - name: war
          # Copy the ols-router.war to the PVC
          command:
          - cp
          - /ols-router.war
          - /app/ROOT.war
          image: image-registry.openshift-image-registry.svc:5000/${TOOLS_NAMESPACE}/ols-router-sidecar:${ROUTER_IS_TAG}
          imagePullPolicy: Always
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app
            name: app-volume

        - name: init-wait-for-cassandra
          image: docker-remote.artifacts.developer.gov.bc.ca/busybox:1.33.1
          # Wait for cassandra service cassandra-${APP_NAME} to be ready.
          # In other words, wait for cassandra to 'boot'
          command:
            - 'sh'
            - '-c'
            - while (:);
               do
                 nc -w 1 cassandra-${APP_NAME} 9042;
                 if [ $? == 0 ];
                 then break;
                 fi;
                 printf .;
                 sleep 1;
               done;
          volumeMounts:
          - name: router-logs
            mountPath: /app

        - name: init-bgeo-keyspace
          image: docker-remote.artifacts.developer.gov.bc.ca/cassandra:3.11.2
          # Create the bgeo keyspace and the bgeo_configuration_parameters table.
          command:
            - 'cqlsh'
            - cassandra-${APP_NAME}
            - '-f'
            - '/apps/bgeo/bgeo_keyspace_config.cql'
          volumeMounts:
          - name: bgeo-configuration-parameters
            mountPath: /apps/bgeo

        - name: load-bgeo-keyspace
          # Load the bgeo.bgeo_configuration_parameters table with data from
          # the config map.
          image: docker-remote.artifacts.developer.gov.bc.ca/cassandra:3.11.2
          # command:
          #   - 'cqlsh'
          #   - cassandra-${APP_NAME}
          #   - '-e'
          #   - DESCRIBE KEYSPACES
          command:
            - 'cqlsh'
            - cassandra-${APP_NAME}
            - '-k'
            - bgeo
            - '-e'
            - COPY bgeo.bgeo_configuration_parameters
              FROM '/apps/bgeo/bgeo_configuration_parameters.csv'
              WITH DELIMITER='^'
              AND HEADER=TRUE
          volumeMounts:
          - name: bgeo-configuration-parameters
            mountPath: /apps/bgeo


        containers:

        - command:
          - catalina.sh
          - run
          env:
          - name: CATALINA_BASE
            value: /usr/local/tomcat
          - name: JAVA_OPTS
            value: -XX:OnOutOfMemoryError="kill -15 %p" -XX:MaxRAMPercentage=75.0
          - name: OLS_CASSANDRA_LOCAL_DATACENTER
            value: DC1
          - name: OLS_CASSANDRA_CONTACT_POINT
            value: cassandra-${APP_NAME}
          - name: OLS_CASSANDRA_KEYSPACE
            value: bgeo
          image: docker-remote.artifacts.developer.gov.bc.ca/tomcat:9-jre11-slim
          imagePullPolicy: IfNotPresent
          name: tomcat
          ports:
          - containerPort: 8080
            name: catalina-http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 270
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "500m"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/tomcat/logs
            name: router-logs
          - mountPath: /usr/local/tomcat/work
            name: tc-work
          - mountPath: /usr/local/tomcat/temp
            name: tc-work
          - mountPath: /usr/local/tomcat/conf/Catalina
            name: tc-conf
          - mountPath: /usr/local/tomcat/webapps
            name: app-volume

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tc-work
        - emptyDir: {}
          name: tc-conf
        - emptyDir: {}
          name: app-volume
        - name: bgeo-configuration-parameters
          configMap:
            name: bgeo-configuration-parameters

    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - metadata:
        name: router-logs
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
